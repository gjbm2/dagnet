{
  "$id": "https://raw.githubusercontent.com/gjbm2/dagnet/main/schema/conversion-graph-1.0.0.json",
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "Conversion Funnel Graph",
  "$comment": "Graph JSON for a conversion funnel DAG with inlined parameters and editor hints. Core semantics: nodes are states; edges are conditional transitions; probabilities are conditional on source node; outgoing edges form a partition that may leave residual routed to a default outcome unless overridden. Acyclicity, absorbing-node constraints, and per-source probability policies are validated by the runner.",
  "type": "object",
  "required": ["nodes", "edges", "policies", "metadata"],
  "additionalProperties": false,
  "properties": {
    "nodes": {
      "type": "array",
      "minItems": 1,
      "items": { "$ref": "#/$defs/Node" }
    },
    "edges": {
      "type": "array",
      "minItems": 0,
      "items": { "$ref": "#/$defs/Edge" }
    },
    "policies": { "$ref": "#/$defs/Policies" },
    "metadata": { "$ref": "#/$defs/Metadata" }
  },
  "$defs": {
    "UUID": { "type": "string", "format": "uuid" },
    "Slug": { "type": "string", "minLength": 1, "maxLength": 128 },

    "Node": {
      "type": "object",
      "required": ["id", "slug"],
      "additionalProperties": false,
      "properties": {
        "id": { "$ref": "#/$defs/UUID" },
        "slug": { "$ref": "#/$defs/Slug" },
        "label": { "type": "string", "maxLength": 256 },
        "description": { "type": "string" },
        "tags": {
          "type": "array",
          "items": { "type": "string" },
          "uniqueItems": true
        },
        "absorbing": { 
          "type": "boolean", 
          "default": false, 
          "$comment": "If true, node is terminal and MUST have zero outgoing edges; runner enforces." 
        },
        "outcome_type": {
          "type": "string",
          "enum": ["success", "failure", "error", "neutral", "other"],
          "description": "Classification for absorbing outcomes; optional"
        },
        "entry": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "is_start": { "type": "boolean", "default": false },
            "entry_weight": { "type": "number", "minimum": 0 }
          }
        },
        "costs": { "$ref": "#/$defs/Costs" },
        "residual_behavior": { "$ref": "#/$defs/ResidualBehavior" },
        "layout": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "x": { "type": "number" },
            "y": { "type": "number" },
            "rank": { "type": "integer", "minimum": 0 },
            "group": { "type": "string", "maxLength": 128 },
            "color": { "type": "string", "pattern": "^#([0-9A-Fa-f]{3}|[0-9A-Fa-f]{6}|[0-9A-Fa-f]{8})$" }
          }
        }
      }
    },

    "Edge": {
      "type": "object",
      "required": ["id", "from", "to"],
      "additionalProperties": false,
      "properties": {
        "id": { "$ref": "#/$defs/UUID" },
        "slug": { "$ref": "#/$defs/Slug" },
        "from": { 
          "type": "string", 
          "minLength": 1, 
          "$comment": "Node id or slug; runner canonicalizes to id and checks existence." 
        },
        "to": { 
          "type": "string", 
          "minLength": 1, 
          "$comment": "Node id or slug; runner canonicalizes to id and checks existence." 
        },
        "fromHandle": {
          "type": "string",
          "enum": ["left", "right", "top", "bottom", "left-out", "right-out", "top-out", "bottom-out"],
          "description": "Handle on source node where edge originates"
        },
        "toHandle": {
          "type": "string", 
          "enum": ["left", "right", "top", "bottom"],
          "description": "Handle on target node where edge terminates"
        },
        "description": { "type": "string" },
        "p": { 
          "$ref": "#/$defs/ProbabilityParam",
          "$comment": "Base probability (fallback when no conditional probabilities match). For case edges, variant weight is used instead."
        },
        "conditional_p": {
          "type": "array",
          "items": { "$ref": "#/$defs/ConditionalProbability" },
          "description": "Optional array of conditional probabilities. Evaluated in order; first match wins. Falls back to p if no matches."
        },
        "weight_default": {
          "type": "number",
          "minimum": 0,
          "description": "Used to distribute residual among free edges from the same source; proportional with others."
        },
        "costs": { "$ref": "#/$defs/Costs" },
        "case_variant": {
          "type": "string",
          "maxLength": 128,
          "description": "Name of the variant this edge represents (for case edges only)"
        },
        "case_id": {
          "type": "string",
          "description": "Reference to parent case node ID (for case edges only)"
        },
        "display": { 
          "$ref": "#/$defs/EdgeDisplay",
          "description": "Display parameters for editor (colors, grouping)"
        }
      }
    },

    "ProbabilityParam": {
      "type": "object",
      "additionalProperties": false,
      "$comment": "p.mean is P(to|from). If absent, edge is \"free\" and may be filled by complement/uniform/weighted policy. If stdev provided, runner clips implied bounds to [0,1] as needed.",
      "properties": {
        "mean": { "type": "number", "minimum": 0, "maximum": 1 },
        "stdev": { "type": "number", "minimum": 0 },
        "locked": { "type": "boolean", "default": false },
        "parameter_id": { "type": "string", "description": "Reference to parameter registry" }
      }
    },
    
    "Condition": {
      "type": "object",
      "additionalProperties": false,
      "$comment": "Condition for conditional probability. Currently supports simple 'visited' array. Future versions may add all_of, any_of, none_of.",
      "required": ["visited"],
      "properties": {
        "visited": {
          "type": "array",
          "items": { "type": "string", "minLength": 1 },
          "minItems": 1,
          "description": "Array of node IDs that must have been visited for this condition to be met"
        }
      }
    },
    
    "ConditionalProbability": {
      "type": "object",
      "additionalProperties": false,
      "$comment": "Conditional probability: probability that applies when specific condition is met",
      "required": ["condition", "p"],
      "properties": {
        "condition": { "$ref": "#/$defs/Condition" },
        "p": { "$ref": "#/$defs/ProbabilityParam" }
      }
    },
    
    "EdgeDisplay": {
      "type": "object",
      "additionalProperties": false,
      "$comment": "Display parameters for edges (not semantic, used by editor)",
      "properties": {
        "conditional_color": { 
          "type": "string", 
          "pattern": "^#([0-9A-Fa-f]{3}|[0-9A-Fa-f]{6}|[0-9A-Fa-f]{8})$",
          "description": "User-selected color override for conditional edges"
        },
        "conditional_group": { 
          "type": "string", 
          "maxLength": 128,
          "description": "Optional user-defined group for conditional color assignment"
        }
      }
    },

    "Costs": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "monetary": { "$ref": "#/$defs/MonetaryCost" },
        "time": { "$ref": "#/$defs/TimeCost" }
      }
    },

    "MonetaryCost": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "value": { "type": "number", "minimum": 0 },
        "stdev": { "type": "number", "minimum": 0 },
        "distribution": { 
          "type": "string", 
          "enum": ["normal", "lognormal", "gamma", "uniform"],
          "default": "normal"
        },
        "currency": { 
          "type": "string", 
          "enum": ["GBP", "USD", "EUR"],
          "default": "GBP"
        }
      },
      "required": ["value"]
    },

    "TimeCost": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "value": { "type": "number", "minimum": 0 },
        "stdev": { "type": "number", "minimum": 0 },
        "distribution": { 
          "type": "string", 
          "enum": ["normal", "lognormal", "gamma", "uniform"],
          "default": "lognormal"
        },
        "units": { 
          "type": "string", 
          "enum": ["days", "hours", "weeks"],
          "default": "days"
        }
      },
      "required": ["value"]
    },

    "ResidualBehavior": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "default_outcome": { "type": "string", "minLength": 1 },
        "overflow_policy": {
          "type": "string",
          "enum": ["error", "normalize", "cap"],
          "default": "error"
        }
      }
    },

    "Policies": {
      "type": "object",
      "required": ["default_outcome"],
      "additionalProperties": false,
      "properties": {
        "default_outcome": { "type": "string", "minLength": 1 },
        "overflow_policy": {
          "type": "string",
          "enum": ["error", "normalize", "cap"],
          "default": "error"
        },
        "free_edge_policy": {
          "type": "string",
          "enum": ["complement", "uniform", "weighted"],
          "default": "complement"
        }
      }
    },

    "Metadata": {
      "type": "object",
      "required": ["version", "created_at"],
      "additionalProperties": false,
      "properties": {
        "version": { "type": "string", "pattern": "^\\d+\\.\\d+\\.\\d+$" },
        "created_at": { "type": "string", "format": "date-time" },
        "updated_at": { "type": "string", "format": "date-time" },
        "author": { "type": "string", "maxLength": 256 },
        "description": { "type": "string" },
        "tags": {
          "type": "array",
          "items": { "type": "string" },
          "uniqueItems": true
        }
      }
    }
  }
}